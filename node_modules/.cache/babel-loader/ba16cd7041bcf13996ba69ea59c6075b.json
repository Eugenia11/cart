{"ast":null,"code":"import _slicedToArray from \"/home/evgeniya/cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/evgeniya/cart/src/components/home/home.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { setUser } from '../../actions/user';\nimport ItemTemplate from '../templates/itemTemplate';\nvar useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n});\n\nfunction Home(props) {\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      itemCard = _useState2[0],\n      setItemCard = _useState2[1];\n\n  useEffect(function () {\n    if (props.items) {\n      var itemList = props.items.map(function (item) {\n        return React.createElement(ItemTemplate, {\n          key: item.id,\n          title: item.title,\n          price: item.price,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n      });\n      setItemCard(itemList);\n    }\n  }, [props.items]);\n  return (// <div className={classes.container}>\n    // {itemCard}\n    // </div>\n    React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(CardActionArea, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      className: classes.media,\n      image: props.image ? props.image : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, props.title ? props.title : ''), React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, props.price ? props.price : ''))), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Add to cart\")))\n  );\n}\n\nHome.defaultProps = {\n  items: null\n};\nHome.propTypes = {\n  setUserData: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    items: store.items\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setUserData: function setUserData(data) {\n      return dispatch(setUser(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/home/evgeniya/cart/src/components/home/home.js"],"names":["React","useEffect","useState","connect","PropTypes","makeStyles","setUser","ItemTemplate","useStyles","container","display","flexDirection","Home","props","classes","itemCard","setItemCard","items","itemList","map","item","id","title","price","card","media","image","defaultProps","propTypes","setUserData","func","isRequired","mapStateToProps","store","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { setUser } from '../../actions/user';\nimport ItemTemplate from '../templates/itemTemplate';\n\nconst useStyles = makeStyles({\n    container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n});\n\nfunction Home(props) {\n\n    const classes = useStyles();\n\n    const [itemCard, setItemCard] = useState(null);\n\n    useEffect(() => {\n        if (props.items) {\n            const itemList = props.items.map((item) => {\n                return (\n                    <ItemTemplate\n                        key={item.id}\n                        title={item.title}\n                        price={item.price}\n                    />\n                )\n            });\n            setItemCard(itemList);\n        }\n    }, [props.items]);\n\n    return (\n        // <div className={classes.container}>\n        // {itemCard}\n        // </div>\n\n        <Card className={classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image={props.image ? props.image : ''}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h3\">\n                        {props.title ? props.title : ''}\n                    </Typography>\n\n                    <Typography gutterBottom variant=\"h5\" component=\"1\">\n                        {props.price ? props.price : ''}\n                    </Typography>\n\n                </CardContent>\n            </CardActionArea>\n\n            <CardActions>\n                <Button size=\"small\" color=\"primary\">\n                    Add to cart\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nHome.defaultProps = {\n    items: null,\n}\n\nHome.propTypes = {\n    setUserData: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = store => ({\n    items: store.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setUserData: data => dispatch(setUser(data)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}