{"ast":null,"code":"var _jsxFileName = \"/home/evgeniya/cart/src/components/templates/itemTemplate.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { addToCart } from '../../actions/items';\nvar useStyles = makeStyles({\n  card: {\n    maxWidth: 350,\n    marginBottom: 20,\n    marginLeft: 20\n  },\n  media: {\n    height: 500\n  },\n  button: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  price: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  }\n});\n\nfunction ItemTemplate(props) {\n  var classes = useStyles();\n\n  var handleClick = function handleClick() {\n    props.addToCartData(props.id);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.media,\n    image: props.image ? props.image : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    component: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, props.title ? props.title : ''), React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h1\",\n    className: classes.price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, props.price ? props.price : '', \" \\u0433\\u0440\\u043D\"))), React.createElement(CardActions, {\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"medium\",\n    color: \"primary\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Add to cart\"))));\n}\n\nItemTemplate.defaultProps = {\n  cart: null\n};\nItemTemplate.propTypes = {\n  addToCartData: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    cart: store.cart\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addToCartData: function addToCartData(data) {\n      return dispatch(addToCart(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemTemplate);","map":{"version":3,"sources":["/home/evgeniya/cart/src/components/templates/itemTemplate.js"],"names":["React","connect","PropTypes","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","addToCart","useStyles","card","maxWidth","marginBottom","marginLeft","media","height","button","display","flexDirection","justifyContent","price","ItemTemplate","props","classes","handleClick","addToCartData","id","image","title","defaultProps","cart","propTypes","func","isRequired","mapStateToProps","store","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { addToCart } from '../../actions/items';\n\nconst useStyles = makeStyles({\n    card: {\n        maxWidth: 350,\n        marginBottom: 20,\n        marginLeft: 20,\n    },\n    media: {\n        height: 500,\n    },\n    button: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\"\n    },\n    price: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\"\n    }\n});\n\nfunction ItemTemplate(props) {\n\n    const classes = useStyles();\n\n    const handleClick = () => {\n        props.addToCartData(props.id);\n    }\n\n    return (\n        <div>\n            <Card className={classes.card}>\n                <CardActionArea>\n                    <CardMedia\n                        className={classes.media}\n                        image={props.image ? props.image : ''}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h6\" component=\"h6\">\n                            {props.title ? props.title : ''}\n                        </Typography>\n\n                        <Typography gutterBottom variant=\"h5\" component=\"h1\" className={classes.price}>\n                            {props.price ? props.price : ''} грн\n                        </Typography>\n\n                    </CardContent>\n                </CardActionArea>\n\n                <CardActions className={classes.button}>\n                    <Button size=\"medium\" color=\"primary\" onClick={handleClick}>\n                        Add to cart\n                </Button>\n                </CardActions>\n            </Card>\n        </div>\n    );\n\n}\n\nItemTemplate.defaultProps = {\n    cart: null,\n}\n\nItemTemplate.propTypes = {\n    addToCartData: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = store => ({\n    cart: store.cart,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    addToCartData: data => dispatch(addToCart(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemTemplate);"]},"metadata":{},"sourceType":"module"}