{"ast":null,"code":"import _slicedToArray from \"/home/evgeniya/cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/evgeniya/cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/evgeniya/cart/src/components/home/cart.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { setItems } from '../../actions/items';\nimport itemCartTemplate from '../templates/itemCartTemplate';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      marginLeft: \"5%\",\n      marginRight: \"5%\"\n    },\n    drawerHeader: _objectSpread({\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(3, 0)\n    }, theme.mixins.toolbar, {\n      justifyContent: 'flex-end'\n    })\n  };\n});\n\nfunction Cart(props) {\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      itemCard = _useState2[0],\n      setItemCard = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cartContent = _useState4[0],\n      setCartContent = _useState4[1];\n\n  useEffect(function () {\n    var cart = JSON.parse(localStorage.getItem('cart'));\n    setCartContent(cart);\n    console.log(cart);\n  }, []);\n  useEffect(function () {\n    if (cartContent) {\n      var itemList = props.cartContent.itemsInCart.map(function (item) {\n        return React.createElement(\"itemCartTemplate\", {\n          key: item.id,\n          title: item.title,\n          price: item.price,\n          image: item.image,\n          id: item.id,\n          quantity: item.quantity // totalPrice={cartContent.price}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      });\n      setItemCard(itemList);\n    }\n  }, [cartContent]);\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, itemCard));\n}\n\nCart.defaultProps = {\n  cart: null\n};\nCart.propTypes = {\n  setItemsData: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    cart: store.cart\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setItemsData: function setItemsData(data) {\n      return dispatch(setItems(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["/home/evgeniya/cart/src/components/home/cart.js"],"names":["React","useEffect","useState","connect","PropTypes","makeStyles","setItems","itemCartTemplate","useStyles","theme","container","display","flexDirection","flexWrap","marginLeft","marginRight","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","Cart","props","classes","itemCard","setItemCard","cartContent","setCartContent","cart","JSON","parse","localStorage","getItem","console","log","itemList","itemsInCart","map","item","id","title","price","image","quantity","defaultProps","propTypes","setItemsData","func","isRequired","mapStateToProps","store","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { setItems } from '../../actions/items';\n\nimport itemCartTemplate from '../templates/itemCartTemplate'\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        marginLeft: \"5%\",\n        marginRight: \"5%\",\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(3, 0),\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n}));\n\nfunction Cart(props) {\n\n    const classes = useStyles();\n\n    const [itemCard, setItemCard] = useState(null);\n    const [cartContent, setCartContent] = useState(null);\n\n    useEffect(() => {\n        const cart = JSON.parse(localStorage.getItem('cart'));\n        setCartContent(cart);\n        console.log(cart)\n    }, [])\n\n    useEffect(() => {\n        if (cartContent) {\n            const itemList = props.cartContent.itemsInCart.map((item) => {\n                return (\n                    <itemCartTemplate\n                        key={item.id}\n                        title={item.title}\n                        price={item.price}\n                        image={item.image}\n                        id={item.id}\n                        quantity={item.quantity}\n                        // totalPrice={cartContent.price}\n                    />\n\n                )\n            });\n            setItemCard(itemList);\n        }\n    }, [cartContent]);\n\n    return (\n        <main>\n\n            <div className={classes.drawerHeader} />\n\n            <div className={classes.container}>{itemCard}</div>\n            {/* <div>hello</div> */}\n\n        </main>\n    )\n}\n\nCart.defaultProps = {\n    cart: null,\n}\n\nCart.propTypes = {\n    setItemsData: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = store => ({\n    cart: store.cart,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setItemsData: data => dispatch(setItems(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}