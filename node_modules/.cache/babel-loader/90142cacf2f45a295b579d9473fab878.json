{"ast":null,"code":"import _slicedToArray from \"/home/evgeniya/cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/evgeniya/cart/src/components/home/home.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { setUser } from '../../actions/user';\nimport ItemTemplate from '../templates/itemTemplate';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nvar useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n});\n\nfunction Home(props) {\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      itemCard = _useState2[0],\n      setItemCard = _useState2[1];\n\n  useEffect(function () {\n    if (props.items) {\n      var itemList = props.items.map(function (item) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: classes.card,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(CardActionArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(CardMedia, {\n          className: classes.media,\n          image: props.image ? props.image : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }), React.createElement(CardContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"h3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, props.title ? props.title : ''), React.createElement(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, props.price ? props.price : ''))), React.createElement(CardActions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"small\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Add to cart\"))));\n      });\n      setItemCard(itemList);\n    }\n  }, [props.items]);\n  return React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, itemCard);\n}\n\nHome.defaultProps = {\n  items: null\n};\nHome.propTypes = {\n  setUserData: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    items: store.items\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setUserData: function setUserData(data) {\n      return dispatch(setUser(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/home/evgeniya/cart/src/components/home/home.js"],"names":["React","useEffect","useState","connect","PropTypes","makeStyles","setUser","ItemTemplate","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","useStyles","container","display","flexDirection","Home","props","classes","itemCard","setItemCard","items","itemList","map","item","card","media","image","title","price","defaultProps","propTypes","setUserData","func","isRequired","mapStateToProps","store","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { setUser } from '../../actions/user';\nimport ItemTemplate from '../templates/itemTemplate';\n\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n});\n\nfunction Home(props) {\n\n    const classes = useStyles();\n\n    const [itemCard, setItemCard] = useState(null);\n\n    useEffect(() => {\n        if (props.items) {\n            const itemList = props.items.map((item) => {\n                return (\n                    <div>\n                        <Card className={classes.card}>\n                            <CardActionArea>\n                                <CardMedia\n                                    className={classes.media}\n                                    image={props.image ? props.image : ''}\n                                />\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"h5\" component=\"h3\">\n                                        {props.title ? props.title : ''}\n                                    </Typography>\n\n                                    <Typography gutterBottom variant=\"h5\" component=\"1\">\n                                        {props.price ? props.price : ''}\n                                    </Typography>\n\n                                </CardContent>\n                            </CardActionArea>\n\n                            <CardActions>\n                                <Button size=\"small\" color=\"primary\">\n                                    Add to cart\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    </div>\n                )\n            });\n            setItemCard(itemList);\n        }\n    }, [props.items]);\n\n    return (\n        <div className={classes.container}>\n        {itemCard}\n        </div>\n    )\n}\n\nHome.defaultProps = {\n    items: null,\n}\n\nHome.propTypes = {\n    setUserData: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = store => ({\n    items: store.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setUserData: data => dispatch(setUser(data)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}